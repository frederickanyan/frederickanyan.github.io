---
title: "Latent Growth Curve Models (LGCM): Applications with R"
author: "Frederick Anyan"
date: "2023-11-30"
categories: [Latent Growth Curve Models, Dynamic Models]
image: "lgcm_tic_tvcR.PNG"
---

Different analysis techniques allow researchers to examine change in outcome variable(s) across time, including regression methods, mean comparisons and repeated measures ANOVA - although with some limitations. A common practice in developmental research is to assess growth trajectory to understand developmental change - how and when it happens, interindividual differences in how and when it happens, as well as why it happens. Structural Equation Modelling (SEM) is a family of related analysis techniques -- correlations, regression analyses and factor analyses, using both observed and unobserved (latent) variables to offer a flexible framework for analyzing developmental change in a highly convenient and statistically rigorous framework for applied research in the social, behavioral, and educational sciences.

This workshop will cover basic and advanced longitudinal SEM models using R in a very easy and efficient implementation. To make the workshop more 'theory- and practice-based' than 'equations-based', the models that will be estimated in this workshop will be guided by the overarching objectives of longitudinal research (see Baltes & Nesselroade, 1979; McArdle, 2012).

References

<ul>

<li>Baltes, P. B., & Nesselroade, J. R. (1979). History and rationale of longitudinal research. In J. R. Nasselroade & P. B. Baltes (Eds.), Longitudinal research in the study of behaviour and development (pp. 1-39). New York: Academic Press.</li>

<li>McArdle, J. J. (2012). Foundational issues in the contemporary modeling of longitudinal trajectories. In B. Laursen, T. D. Little, & N. A. Card (Eds.), Handbook of developmental research methods (pp. 385-410). New York, NY: The Guilford Press.</li>

</ul>

::: {.callout-tip appearance="simple"}
Throughout this workshop, we will use only one function from the lavaan package. So, feel at ease even if it is your first time working in the R environment.
:::

Following are models shown in the tab groups

**Tab group 1**

<li>Model 1: The No growth or Intercept only model.</li>

<li>Model 2: The Linear growth curve model.</li>

<li>Model 3: The Quadratic growth curve model.</li>

**Tab group 2**

<li>Model 4_1: Bilinear/Spline/Piecewise/Multiphase model - M1.</li>

<li>Model 4_2: Bilinear/Spline/Piecewise/Multiphase model - M2.</li>

<li>Model 4_3: Bilinear/Spline/Piecewise/Multiphase model - M3.</li>

**Tab group 3**

<li>Model 5: The linear growth curve model with time-varying covariates.</li>

<li>Model 6: The linear growth curve model with time invariant covariates.</li>

<li>Model 7: The linear growth curve model with time-varying and time invariant covariates.</li>

<li>Model 8: The linear growth curve model with growth factors predicting a distal outcome.</li>

**Tab group 4**

<li>Model 9_1: Multiple-group linear growth curve model - Full Invariance (M1).</li>

<li>Model 9_2: Multiple-group linear growth curve model - Growth factor means freed(M2).</li>

<li>Model 9_3: Multiple-group linear growth curve model - Growth factor means and covariances freed(M3).</li>

<li>Model 9_4: Multiple-group linear growth curve model - Growth factor means, covariances and residual variances freed(M4).</li>

**Tab group 5**

<li>Model 10_1: Multivariate or Parallel growth curve model.</li>

<li>Model 10_2: Multivariate or Parallel growth curve model with autocorrelations.</li>

<li>Model 10_3: Multivariate or Parallel growth curve model with cross domain correlations.</li>

**Tab group 6**

<li>Model 11: Sequentially contingent growth curve model.</li>

*If you are not interested in the practical preliminaries, you can jump to the No growth/Linear and Quadratic growth models by clicking on the options on your right*

## Practical preliminaries

Load packages

```{r}
suppressPackageStartupMessages({
#library(haven) #To read dataset into R. 
library(psych)  #For practical preliminaries: univariate and bivariate descriptive stats
library(lcsm)   #For plotting longitudinal trajectories from wide data set
library(lavaan) #For calling sem/cfa/growth functions. We will use the growth() function in the lavaan pacakage, which also has other functions. [See here](https://lavaan.ugent.be)
library(ggplot2)
})
```

Read data

```{r}
data <- read.csv("/Volumes/anyan-1/frederickanyan.github.io/quantpost_data/data.csv")
#Create new data set with only your main outcome variables
lonely <- data[, c("lone1", "lone2", "lone3", "lone4", "lone5")]
#To plot longitudinal trajectories, create a new data set of only your outcome variables with id included
lonelytrajectory <- data[, c("personid", "lone1", "lone2", "lone3", "lone4", "lone5")]
```

::: panel-tabset
## Examine univariate and bivariate statistics

```{r}
#Examine descriptive statistics.
describe(lonely) #univariate descriptives 

#bivariate descriptives
cov(lonely, use='pairwise.complete.obs') #covariance matrix
cor(lonely, use='pairwise.complete.obs') #correlation matrix

#bivariate scatter plots below the diagonal, histograms on the diagonal, and the Pearson correlation above the diagonal.
pairs.panels(lonely, lm = TRUE) #lm = TRUE to fit a regression line if needed
```

Explanatory test or how to intepret and use results from preactical preliminaries can be found [here](https://frederickanyan.github.io/quantposts/practical%20prelims/practical.html)

## Longitudinal plots

```{r}
plot_trajectories(data = lonelytrajectory,
                  id_var = "personid", 
                  var_list = c("lone1", "lone2", "lone3", "lone4", "lone5"),
                  xlab = "Year", ylab = "Loneliness",
                  connect_missing = FALSE,   #Want to plot only complete observations
                  random_sample_frac = 0.05, #You can select more or less than 5% of the data by adjusting this
                  title_n = TRUE)
```

You can plot separate individual trajectories

```{r}
plot_trajectories(data = lonelytrajectory,
                  id_var = "personid", 
                  var_list = c("lone1", "lone2", "lone3", "lone4", "lone5"),
                  xlab = "Year", ylab = "Loneliness",
                  connect_missing = FALSE,   #Want to plot only complete observations
                  random_sample_frac = 0.025, #You can select more or less than 5% of the data by adjusting this
                  title_n = TRUE) +
 facet_wrap(~personid)
```

Explanatory test or how to intepret and use results from preactical preliminaries can be found [here](https://frederickanyan.github.io/quantposts/practical%20prelims/practical.html)
:::

## No growth/Linear and Quadratic growth models

Basic growth models are described here, including the *No growth model or the Intercept only model* - which is a logical starting point for growth modelling. We want to reject the no growth modelling as it predicts no overall rate of change across time. The next model is the *Linear growth curve model* which predicts a linear rate of change across time. The *Quadratic growth curve model* is a non-linear growth curve model that predicts an overall accelerartion or deceleration in the rate of change when controlling for the linear change across time. Although the *Quadratic growth curve model* can be a useful alternative when the *Linear growth curve model* fits poorly or there is some degree of nonlinearity in the observed data, it can present much interpretation difficulty. The *Latent basis growth curve model* allows the data to define the growth function - discussed in the workshop.

::: panel-tabset
## Model 1

```{r}
# 001_No growth curve model
nogrowth <- ' i =~ 1*lone1 + 1*lone2 + 1*lone3 + 1*lone4 + 1*lone5'
fit_nogrowth <- growth(nogrowth, data = data)
summary(fit_nogrowth, fit.measures = TRUE)
```

## Model 2

```{r}
# 002_Linear growth curve model
linear <- ' i =~ 1*lone1 + 1*lone2 + 1*lone3 + 1*lone4 + 1*lone5
           s =~ 0*lone1 + 1*lone2 + 3*lone3 + 4*lone4 + 6*lone5'
fit_linear <- growth(linear, data = data)
summary(fit_linear, fit.measures = TRUE)
```

## Model 3

```{r}
# 003_Quadratic growth curve model
quadratic <- ' i =~ 1*lone1 + 1*lone2 + 1*lone3 + 1*lone4 + 1*lone5
           s =~ 0*lone1 + 1*lone2 + 3*lone3 + 4*lone4 + 6*lone5
           q =~ 0*lone1 + 1*lone2 + 9*lone3 + 16*lone4 + 36*lone5'
fit_quadratic <- growth(quadratic, data = data)
summary(fit_quadratic, fit.measures = TRUE)
```
:::


## Model Comparisons
Models 1, 2 and 3 can be compared since 1 and 2 are nested in (i.e., reduced forms of) Model 3. In this way, the best model to data correspondence can be determined through a chi-square difference test. However, a word of caution here is that, you should only compare models whose fit indices are acceptable. Therefore, in a real scenario, we would not compare Models 1 and 2 since they both do not reach acceptable model fit. 

We would instead nominate Model 3 as the best model representation of the data (at least, the best fitting model of the three although the RMSEA and TLI are not good enough). The non-linear growth function in Model 3 reproduces the trajectory observed when examining observed means in the univariate descriptives. 

```{r}
compare_no_linear <- anova(fit_nogrowth, fit_linear)
compare_no_linear
```
The results (x2() = 111.19, p < .001) show significant difference in model fit between Model 1 (no growth mode) and Model 2 (linear growth). Thus, Model 2, in which the linear growth factor is freely estimated (relative to Model 1) has improved data to model correspondence (or fits better) than Model 1. Remember that this is just an example of how to compare nested models, and that you should only compare models whose fit indices are acceptable. 


## Bilinear/Spline/Piecewise/Multiphase growth models

The *Quadratic growth curve model* is specified by adding a second-order power of time to the *Linear growth curve model*, which means that there would be a high correlation between the power terms. This can be resolved by centering the intercept growth factor in the middle of the observation, but becomes more difficult when moving to higher-order polynomials. For this reason, it is recommended to examine the data if a *Piecewise growth curve model* could be an alternative solution. The most common type is the *Bilinear growth curve model* which joins two linear growth factors. It also goes by the name *Spline growth model* and *Multiphase growth model*. They can accommodate different linear or nonlinear growth functions by segmenting the period of observation with a knot point often called *transition points* when there are theoretical reasons to separate the observations into discrete phases - hence their name *Multiphase growth model*. For example, they can be used to model developmental changes that occur during pre-school, primary school and high school with transition points at when a child begins primary school and also at when s/he begins high school.

::: panel-tabset
## Model 4_1

```{r}
# 004_Bilinear/Spline growth curve model
bilinear <- ' i =~ 1*lone1 + 1*lone2 + 1*lone3 + 1*lone4 + 1*lone5
           s1 =~ 0*lone1 + 1*lone2 + 3*lone3 + 3*lone4 + 3*lone5
           s2 =~ 0*lone1 + 0*lone2 + 0*lone3 + 1*lone4 + 3*lone5'
fit_bilinear <- growth(bilinear, data = data)
summary(fit_bilinear, fit.measures = TRUE)
```

## Model 4_2

```{r}
# 004_2_Bilinear/Spline growth curve model - 2
bilinear_2 <- ' i =~ 1*lone1 + 1*lone2 + 1*lone3 + 1*lone4 + 1*lone5
           s1 =~ -3*lone1 + -2*lone2 + 0*lone3 + 0*lone4 + 0*lone5
           s2 =~ 0*lone1 + 0*lone2 + 0*lone3 + 1*lone4 + 3*lone5'
fit_bilinear_2 <- growth(bilinear_2, data = data)
summary(fit_bilinear_2, fit.measures = TRUE)
```

## Model 4_3

```{r}
# 004_3_Bilinear/Spline growth curve model - 3
bilinear_3 <- ' i =~ 1*lone1 + 1*lone2 + 1*lone3 + 1*lone4 + 1*lone5
           s1 =~ -3*lone1 + -3*lone2 + -3*lone3 + -2*lone4 + 0*lone5
           s2 =~ -3*lone1 + -2*lone2 + 0*lone3 + 0*lone4 + 0*lone5'
fit_bilinear_3 <- growth(bilinear_3, data = data)
summary(fit_bilinear_3, fit.measures = TRUE)
```
:::

## Growth models with time- varying and invariant predictors and distal outcomes

Dynamic predictors that change across time can be incorporated into the growth model to simultaneously estimate the overall rate of change and the change from the time-varying predictors. These dynamic, time-varying predictors account for within-person changes by altering the trajectory of growth in an individual. Between-person differences in the within-person rate of change can be explained by the inclusion of time invariant predictors such as gender or experimental conditions. Growth factors can be hypothesized to predict distal outcomes that are measured after the growth process such as the rate of change in metacognitve therapy predicting recovery status in a 24-month follow up.

::: panel-tabset
## Model 5

```{r}
# 005_Linear growth curve model with time-varying covariates 
timevaryingcov <- ' i =~ 1*lone1 + 1*lone2 + 1*lone3 + 1*lone4 + 1*lone5
           s =~ 0*lone1 + 1*lone2 + 3*lone3 + 4*lone4 + 6*lone5
# Time-varying covariates
lone1 ~ host1             #lone1 ~ eq*host1
lone2 ~ host2             #lone2 ~ eq*host2
lone3 ~ host3             #lone3 ~ eq*host3
lone4 ~ host4             #lone4 ~ eq*host4
lone5 ~ host5             #lone5 ~ eq*host5

#Estimate the means of the TVC
host1 ~ 1
host2 ~ 1
host3 ~ 1
host4 ~ 1
host5 ~ 1

#Estimate covariance between TVC
host1 ~~ host2 + host3 + host4 + host5
host2 ~~ host3 + host4 + host5
host3 ~~ host4 + host5
host4 ~~ host5'

fit_timevaryingcov <- growth(timevaryingcov, data = data)
summary(fit_timevaryingcov, fit.measures = TRUE)
```

## Model 6

```{r}
# 006_Linear growth curve model with time invariant covariates 
timeinvar <- ' i =~ 1*lone1 + 1*lone2 + 1*lone3 + 1*lone4 + 1*lone5
           s =~ 0*lone1 + 1*lone2 + 3*lone3 + 4*lone4 + 6*lone5

# Time invariant covariates
i ~ female
s ~ female'
fit_timeinvar <- growth(timeinvar, data = data)
summary(fit_timeinvar, fit.measures = TRUE)

```

## Model 7

```{r}
# 007_Linear growth curve model with time invariant and time-varying covariates 
timeinvartimevar <- ' i =~ 1*lone1 + 1*lone2 + 1*lone3 + 1*lone4 + 1*lone5
                       s =~ 0*lone1 + 1*lone2 + 3*lone3 + 4*lone4 + 6*lone5
# Time-varying covariates held equal
lone1 ~ eq*host1
lone2 ~ eq*host2
lone3 ~ eq*host3
lone4 ~ eq*host4
lone5 ~ eq*host5

# Time invariant covariates
i ~ female + pdu1 + ace1
s ~ female + pdu1 + ace1
    
#Estimate the means of TVC and TIC
host1 ~ 1
host2 ~ 1
host3 ~ 1
host4 ~ 1
host5 ~ 1
female ~ 1
pdu1 ~ 1
ace1 ~ 1

#Estimate covariances between TIC with TVC
ace1 ~~ female + pdu1 + host1 + host2 + host3 + host4 + host5
female ~~ pdu1 + host1 + host2 + host3 + host4 + host5
pdu1 ~~ host1 + host2 + host3 + host4 + host5
host1 ~~ host2 + host3 + host4 + host5
host2 ~~ host3 + host4 + host5
host3 ~~ host4 + host5
host4 ~~ host5

#Fix covariances between TIC and growth factors to zero
i ~~ 0*host1 
i ~~ 0*host2 
i ~~ 0*host3 
i ~~ 0*host4
i ~~ 0*host5

s ~~ 0*host1 
s ~~ 0*host2 
s ~~ 0*host3 
s ~~ 0*host4
s ~~ 0*host5
'
fit_timeinvar_timevar <- growth(timeinvartimevar, data = data)
summary(fit_timeinvar_timevar, fit.measures = TRUE)

```

## Model 8

```{r}
# 008_Linear growth curve model with growth factors predicting distal outcomes 
distal <- ' i =~ 1*lone1 + 1*lone2 + 1*lone3 + 1*lone4 + 1*lone5
                       s =~ 0*lone1 + 1*lone2 + 3*lone3 + 4*lone4 + 6*lone5

# Regress distal outcome on growth factors
subs5 ~ i + s

#Estimate the intercept of distal outcome (subs5)
subs5 ~ 1'
fit_distal <- growth(distal, data = data)
summary(fit_distal, fit.measures = TRUE)
```
:::

## Multiple group growth models

A *Multiple-group growth model* approach offers greater flexibility in explaining between-person differences in the within-person rate of change than the *Growth model with time invariant covariate*. For example, the Wald test of differences in growth parameters can be tested within the multiple-group approach to explain whether, on average, the experimental group experience greater overall decline than the control group - thus providing insights into how and why individuals differ in their rate of change and by how much difference. The multiple-group approach can inform about differences in all the growth functions' parameters - including the growth factors means, co/variances and residual variances.

::: panel-tabset
## Model 9_1

```{r}
# 009_1_Multigroup LGCM M1 Invariance model - M1
multigroupM1 <- ' i =~ 1*lone1 + 1*lone2 + 1*lone3 + 1*lone4 + 1*lone5
           s =~ 0*lone1 + 1*lone2 + 3*lone3 + 4*lone4 + 6*lone5
#Growth factor means constrained equal
i ~ c(int, int)*1
s ~ c(slp, slp)*1

#Growth factor variances held equal
i ~~ c(vint, vint)*i
s ~~ c(vslp, vslp)*s

#Growth factor covariances held equal
i ~~ c(cvf, cvf)*s

#Residual variances of observed items held equal
lone1 ~~ c(res, res)*lone1
lone2 ~~ c(res, res)*lone2
lone3 ~~ c(res, res)*lone3
lone4 ~~ c(res, res)*lone4
lone5 ~~ c(res, res)*lone5
'
fit_multigroupM1 <- growth(multigroupM1, data = data, group = "female")
summary(fit_multigroupM1, fit.measures = TRUE)
```

## Model 9_2

```{r}
# 009_2_Multigroup LGCM M2 Free factor means - M2
multigroupM2 <- ' i =~ 1*lone1 + 1*lone2 + 1*lone3 + 1*lone4 + 1*lone5
           s =~ 0*lone1 + 1*lone2 + 3*lone3 + 4*lone4 + 6*lone5
#Growth factor means freely estimated
i ~ c(intm, intf)*1
s ~ c(slpm, slpf)*1

#Growth factor variances held equal
i ~~ c(vint, vint)*i
s ~~ c(vslp, vslp)*s

#Growth factor covariances held equal
i ~~ c(cvf, cvf)*s

#Residual variances of observed items held equal
lone1 ~~ c(res, res)*lone1
lone2 ~~ c(res, res)*lone2
lone3 ~~ c(res, res)*lone3
lone4 ~~ c(res, res)*lone4
lone5 ~~ c(res, res)*lone5
'
fit_multigroupM2 <- growth(multigroupM2, data = data, group = "female")
summary(fit_multigroupM2, fit.measures = TRUE)
```

## Model 9_3

```{r}
# 009_3_Multigroup LGCM M3 Free factor means and co/variances - M3
multigroupM3 <- ' i =~ 1*lone1 + 1*lone2 + 1*lone3 + 1*lone4 + 1*lone5
           s =~ 0*lone1 + 1*lone2 + 3*lone3 + 4*lone4 + 6*lone5
#Growth factor means freely estimated
i ~ c(intm, intf)*1
s ~ c(slpm, slpf)*1

#Growth factor variances freely estimated
i ~~ c(vinm, vinf)*i
s ~~ c(vslm, vslf)*s

#Growth factor covariances freely estimated
i ~~ c(covm, covf)*s

#Residual variances of observed items held equal
lone1 ~~ c(res, res)*lone1
lone2 ~~ c(res, res)*lone2
lone3 ~~ c(res, res)*lone3
lone4 ~~ c(res, res)*lone4
lone5 ~~ c(res, res)*lone5
'
fit_multigroupM3 <- growth(multigroupM3, data = data, group = "female")
summary(fit_multigroupM3, fit.measures = TRUE)
```

## Model 9_4

```{r}
# 009_4_Multigroup LGCM M4 Free factor means and co/variances - M4
multigroupM4 <- ' i =~ 1*lone1 + 1*lone2 + 1*lone3 + 1*lone4 + 1*lone5
           s =~ 0*lone1 + 1*lone2 + 3*lone3 + 4*lone4 + 6*lone5
#Growth factor means freely estimated
i ~ c(intm, intf)*1
s ~ c(slpm, slpf)*1

#Growth factor variances freely estimated
i ~~ c(vinm, vinf)*i
s ~~ c(vslm, vslf)*s

#Growth factor covariances freely estimated
i ~~ c(covm, covf)*s

#Residual variances of observed items freely estimated
lone1 ~~ c(rsm1, rsf1)*lone1
lone2 ~~ c(rsm2, rsf2)*lone2
lone3 ~~ c(rsm3, rsf3)*lone3
lone4 ~~ c(rsm4, rsf4)*lone4
lone5 ~~ c(rsm5, rsf5)*lone5
'
fit_multigroupM4 <- growth(multigroupM4, data = data, group = "female")
summary(fit_multigroupM4, fit.measures = TRUE)
```
:::

## Test of parameter constraints

First we test whether the intercept growth factors in both groups are significantly different using Model 9_4 since we freely estimated all model parameters in Model 9_4

```{r}
constint = 'intm - intf == 0'
lavTestWald(fit_multigroupM4, constraints = constint)
```

Then we also test whether the slope growth factors in both groups are significantly different using Model 9_4 since we freely estimated all model parameters in Model 9_4

```{r}
#Then we test whether 
constslp = 'slpm - slpf ==0'
lavTestWald(fit_multigroupM4, constraints = constslp)
```

## Modelling co-development and Multivariate growth models

Modelling the co-development among different attributes such as the comorbidity of anxiety and depression is becoming more common. *Multivariate growth models* also called *Parallel growth models* can accommodate different growth functions among two or more attributes. Care must be taken and theoretical considerations must be prioritized when choosing between *Multivariate growth curve models* and the *Growth curve models with time-varying covariates*. The two are related but answer different research questions.

::: panel-tabset
## Model 10_1

```{r}
# 010_1_Parallel growth curve models - anxiety and depression symptoms
parallel <- ' ia =~ 1*anx1 + 1*anx2 + 1*anx3 + 1*anx4 + 1*anx5
                sa =~ 0*anx1 + 1*anx2 + 3*anx3 + 4*anx4 + 6*anx5
                id =~ 1*dep1 + 1*dep2 + 1*dep3 + 1*dep4 + 1*dep5
                sd =~ 0*dep1 + 1*dep2 + 3*dep3 + 4*dep4 + 6*dep5
#Growth factor corelations 
ia ~~ id + sa
sd ~~ id + sa
ia ~~ 0*sd 
id ~~ 0*sa
'
fit_parallel <- growth(parallel, data = data)
summary(fit_parallel, fit.measures = TRUE)
```

## Model 10_2

```{r}
# 010_2_Parallel growth curve models - anxiety and depression symptoms with autocorrelations
parallelautocor <- ' ia =~ 1*anx1 + 1*anx2 + 1*anx3 + 1*anx4 + 1*anx5
                sa =~ 0*anx1 + 1*anx2 + 3*anx3 + 4*anx4 + 6*anx5
                id =~ 1*dep1 + 1*dep2 + 1*dep3 + 1*dep4 + 1*dep5
                sd =~ 0*dep1 + 1*dep2 + 3*dep3 + 4*dep4 + 6*dep5
#Growth factor corelations 
ia ~~ id + sa
sd ~~ id + sa
ia ~~ 0*sd 
id ~~ 0*sa

#Autocorrelations 
anx1 ~~ anx2
anx2 ~~ anx3
anx3 ~~ anx4
anx4 ~~ anx5

dep1 ~~ dep2
dep2 ~~ dep3
dep3 ~~ dep4
dep4 ~~ dep5
'
fit_parallelautocor <- growth(parallelautocor, data = data)
summary(fit_parallelautocor, fit.measures = TRUE)
```

## Model 10_3

```{r}
# 010_3_Parallel growth curve models - anxiety and depression symptoms with cross-domain correlations 
parallelcross <- ' ia =~ 1*anx1 + 1*anx2 + 1*anx3 + 1*anx4 + 1*anx5
                sa =~ 0*anx1 + 1*anx2 + 3*anx3 + 4*anx4 + 6*anx5
                id =~ 1*dep1 + 1*dep2 + 1*dep3 + 1*dep4 + 1*dep5
                sd =~ 0*dep1 + 1*dep2 + 3*dep3 + 4*dep4 + 6*dep5
#Growth factor corelations 
ia ~~ id + sa
sd ~~ id + sa
ia ~~ 0*sd 
id ~~ 0*sa

#Cross domain correlations
anx1 ~~ dep1
anx2 ~~ dep2
anx3 ~~ dep3
anx4 ~~ dep4
anx5 ~~ dep5
'
fit_parallelcross <- growth(parallelcross, data = data)
summary(fit_parallelcross, fit.measures = TRUE)
```
:::

## Sequentially contingent growth models

Growth in one attribute can predict the growth that occur in another attribute later in the developmental process. The rate of change in language development during pre-school may predict the rate of change in language skills during primary school. *Sequentially contingent growth models* offer flexibility in modelling such relations in the developmental process that occur in different stages, but might be contingent on each other.

::: panel-tabset
## Model 11

```{r}
# 011_ Sequentially contingent growth curve model anxiety t1-t5 predicting depression t6-t10
sequential <- ' ia =~ 1*anx1 + 1*anx2 + 1*anx3 + 1*anx4 + 1*anx5
                sa =~ 0*anx1 + 1*anx2 + 3*anx3 + 4*anx4 + 6*anx5
                id =~ 1*dep6 + 1*dep7 + 1*dep8 + 1*dep9 + 1*dep10
                sd =~ 0*dep6 + 1*dep7 + 2*dep8 + 3*dep9 + 4*dep10
#Growth factor corelations 
ia ~~ sa
id ~~ sd
ia ~~ 0*sd 
id ~~ 0*sa

#Growth factor regressions of depression on anxiety symptoms
id ~ ia
sd ~ sa
'
#Rename multiple columns using rename()
library(dplyr)
data <- data %>% 
  rename("dep6" = "dep1",
         "dep7" = "dep2",
         "dep8" = "dep3",
         "dep9" = "dep4",
         "dep10" = "dep5")

fit_sequential <- growth(sequential, data = data)
summary(fit_sequential, fit.measures = TRUE)
```
:::

::: {.callout-warning appearance="simple"}
Feel free to contact me at frederick.anyan\@ntnu.no for advise or invitation to present workshops in your own institution.
:::
